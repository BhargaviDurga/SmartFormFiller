{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jada Bhargavi Durga\\\\Desktop\\\\Smart_form_filler\\\\frontend\\\\src\\\\pages\\\\UploadForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\nimport axios from \"axios\";\nimport FileUpload from \"../components/FileUpload\";\nimport LoadingSpinner from \"../components/LoadingSpinner\";\nimport PDFPreview from \"../components/PDFPreview\";\nimport { Upload, ArrowLeft, FileText, ExternalLink, Download, Check } from 'lucide-react';\nimport './UploadForm.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL;\nexport default function UploadForm() {\n  _s();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const [pdfFile, setPdfFile] = useState(null);\n  const [pdfPreviewUrl, setPdfPreviewUrl] = useState(null);\n  const [filledPdfUrl, setFilledPdfUrl] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const {\n    idFiles,\n    extractedData\n  } = location.state || {};\n  const handlePdfSelect = file => {\n    setPdfFile(file);\n    // Create URL for preview when file is selected\n    if (file) {\n      const previewUrl = URL.createObjectURL(file);\n      setPdfPreviewUrl(previewUrl);\n    } else {\n      setPdfPreviewUrl(null);\n    }\n  };\n  const handlePdfUpload = async () => {\n    if (!pdfFile) {\n      setError(\"Please select a PDF file first\");\n      return;\n    }\n    setError(null);\n    setLoading(true);\n    const formData = new FormData();\n    formData.append('file', pdfFile);\n    try {\n      const response = await axios.post(`${API_BASE_URL}/fill-form`, formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        },\n        responseType: 'blob'\n      });\n      const url = URL.createObjectURL(new Blob([response.data], {\n        type: 'application/pdf'\n      }));\n      setFilledPdfUrl(url);\n    } catch (error) {\n      console.error(\"Error uploading PDF:\", error);\n      setError(\"Failed to process the PDF. Please try again.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleDownloadAndRedirect = () => {\n    if (filledPdfUrl) {\n      // Create a link element and trigger download\n      const link = document.createElement('a');\n      link.href = filledPdfUrl;\n      link.download = 'filled_form.pdf';\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n      fetch(filledPdfUrl).then(response => response.blob()).then(blob => {\n        // Pass both the blob and its URL to the success page\n        navigate('/success', {\n          state: {\n            pdfBlob: blob,\n            fileName: 'filled_form.pdf'\n          }\n        });\n      });\n    }\n  };\n  const handleOpenPdf = () => {\n    if (pdfPreviewUrl) {\n      window.open(pdfPreviewUrl, '_blank');\n    }\n  };\n  const handleBack = () => {\n    navigate('/upload-id', {\n      state: {\n        idFiles,\n        extractedData\n      }\n    });\n  };\n\n  // Cleanup URLs when component unmounts\n  React.useEffect(() => {\n    return () => {\n      if (pdfPreviewUrl) URL.revokeObjectURL(pdfPreviewUrl);\n      if (filledPdfUrl) URL.revokeObjectURL(filledPdfUrl);\n    };\n  }, [pdfPreviewUrl, filledPdfUrl]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-upload-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleBack,\n        className: \"back-button\",\n        children: [/*#__PURE__*/_jsxDEV(ArrowLeft, {\n          size: 20\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, this), \"Back to ID Upload\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"form-title\",\n        children: \"Upload Your Form\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"upload-section\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"upload-card\",\n        children: [/*#__PURE__*/_jsxDEV(FileUpload, {\n          label: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"upload-label-content\",\n            children: [/*#__PURE__*/_jsxDEV(FileText, {\n              size: 32\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Select or drop your PDF form here\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 29\n          }, this),\n          onFileSelect: handlePdfSelect\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }, this), pdfFile && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"selected-file\",\n          onClick: handleOpenPdf,\n          children: [/*#__PURE__*/_jsxDEV(FileText, {\n            size: 20\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: pdfFile.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(ExternalLink, {\n            size: 16,\n            className: \"preview-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"preview-text\",\n            children: \"Click to preview\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 25\n        }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-message\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 31\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handlePdfUpload,\n          className: `action-button upload-button ${loading ? 'loading' : ''}`,\n          disabled: loading || !pdfFile,\n          children: loading ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"button-spinner\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 33\n            }, this), \"Processing...\"]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Upload, {\n              size: 20\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 33\n            }, this), \"Process Form\"]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-container\",\n      children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {\n        messages: [\"Filling your form...\", \"This may take a while....Please wait.....\"]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 17\n    }, this), filledPdfUrl && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"preview-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"preview-title\",\n        children: \"Filled Form Preview\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(PDFPreview, {\n        pdfUrl: filledPdfUrl\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleDownloadAndRedirect,\n        className: \"action-button download-button\",\n        children: [/*#__PURE__*/_jsxDEV(Download, {\n          size: 20\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 25\n        }, this), \"Download Form\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"footer-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"logo-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"logo-text\",\n          children: \"Smart Form Filler\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"logo-caption\",\n          children: \"Intelligent Document Processing Made Easy\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 9\n  }, this);\n}\n_s(UploadForm, \"W3puL8b+ZDWHRsMmDIjyiQcKoYU=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = UploadForm;\nvar _c;\n$RefreshReg$(_c, \"UploadForm\");","map":{"version":3,"names":["React","useState","useNavigate","useLocation","axios","FileUpload","LoadingSpinner","PDFPreview","Upload","ArrowLeft","FileText","ExternalLink","Download","Check","jsxDEV","_jsxDEV","Fragment","_Fragment","API_BASE_URL","process","env","REACT_APP_API_BASE_URL","UploadForm","_s","navigate","location","pdfFile","setPdfFile","pdfPreviewUrl","setPdfPreviewUrl","filledPdfUrl","setFilledPdfUrl","loading","setLoading","error","setError","idFiles","extractedData","state","handlePdfSelect","file","previewUrl","URL","createObjectURL","handlePdfUpload","formData","FormData","append","response","post","headers","responseType","url","Blob","data","type","console","handleDownloadAndRedirect","link","document","createElement","href","download","body","appendChild","click","removeChild","fetch","then","blob","pdfBlob","fileName","handleOpenPdf","window","open","handleBack","useEffect","revokeObjectURL","className","children","onClick","size","_jsxFileName","lineNumber","columnNumber","label","onFileSelect","name","disabled","messages","pdfUrl","_c","$RefreshReg$"],"sources":["C:/Users/Jada Bhargavi Durga/Desktop/Smart_form_filler/frontend/src/pages/UploadForm.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport FileUpload from \"../components/FileUpload\";\r\nimport LoadingSpinner from \"../components/LoadingSpinner\";\r\nimport PDFPreview from \"../components/PDFPreview\";\r\nimport { Upload, ArrowLeft, FileText, ExternalLink, Download,Check } from 'lucide-react';\r\nimport './UploadForm.css';\r\n\r\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL;\r\n\r\n\r\nexport default function UploadForm() {\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n    const [pdfFile, setPdfFile] = useState(null);\r\n    const [pdfPreviewUrl, setPdfPreviewUrl] = useState(null);\r\n    const [filledPdfUrl, setFilledPdfUrl] = useState(null);\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n\r\n    const { idFiles, extractedData } = location.state || {};\r\n\r\n    const handlePdfSelect = (file) => {\r\n        setPdfFile(file);\r\n        // Create URL for preview when file is selected\r\n        if (file) {\r\n            const previewUrl = URL.createObjectURL(file);\r\n            setPdfPreviewUrl(previewUrl);\r\n        } else {\r\n            setPdfPreviewUrl(null);\r\n        }\r\n    };\r\n\r\n    const handlePdfUpload = async () => {\r\n        if (!pdfFile) {\r\n            setError(\"Please select a PDF file first\");\r\n            return;\r\n        }\r\n        setError(null);\r\n        setLoading(true);\r\n        const formData = new FormData();\r\n        formData.append('file', pdfFile);\r\n\r\n        try {\r\n            const response = await axios.post(`${API_BASE_URL}/fill-form`, formData, {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data',\r\n                },\r\n                responseType: 'blob',\r\n            });\r\n            const url = URL.createObjectURL(new Blob([response.data], { type: 'application/pdf' }));\r\n            setFilledPdfUrl(url);\r\n        } catch (error) {\r\n            console.error(\"Error uploading PDF:\", error);\r\n            setError(\"Failed to process the PDF. Please try again.\");\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const handleDownloadAndRedirect = () => {\r\n        if (filledPdfUrl) {\r\n            // Create a link element and trigger download\r\n            const link = document.createElement('a');\r\n            link.href = filledPdfUrl;\r\n            link.download = 'filled_form.pdf';\r\n            document.body.appendChild(link);\r\n            link.click();\r\n            document.body.removeChild(link);\r\n\r\n            fetch(filledPdfUrl)\r\n            .then(response => response.blob())\r\n            .then(blob => {\r\n                // Pass both the blob and its URL to the success page\r\n                navigate('/success', { \r\n                    state: { \r\n                        pdfBlob: blob,\r\n                        fileName: 'filled_form.pdf'\r\n                    } \r\n                });\r\n            });\r\n        }\r\n    };\r\n\r\n    const handleOpenPdf = () => {\r\n        if (pdfPreviewUrl) {\r\n            window.open(pdfPreviewUrl, '_blank');\r\n        }\r\n    };\r\n\r\n    const handleBack = () => {\r\n        navigate('/upload-id', { state: { idFiles, extractedData } });\r\n    };\r\n\r\n    // Cleanup URLs when component unmounts\r\n    React.useEffect(() => {\r\n        return () => {\r\n            if (pdfPreviewUrl) URL.revokeObjectURL(pdfPreviewUrl);\r\n            if (filledPdfUrl) URL.revokeObjectURL(filledPdfUrl);\r\n        };\r\n    }, [pdfPreviewUrl, filledPdfUrl]);\r\n\r\n    return (\r\n        <div className=\"form-upload-container\">\r\n            <div className=\"form-header\">\r\n                <button onClick={handleBack} className=\"back-button\">\r\n                    <ArrowLeft size={20} />\r\n                        Back to ID Upload\r\n                </button>\r\n                <h2 className=\"form-title\">Upload Your Form</h2>\r\n            </div>\r\n\r\n            <div className=\"upload-section\">\r\n                <div className=\"upload-card\">\r\n                    <FileUpload \r\n                        label={\r\n                            <div className=\"upload-label-content\">\r\n                                <FileText size={32} />\r\n                                <span>Select or drop your PDF form here</span>\r\n                            </div>\r\n                        } \r\n                        onFileSelect={handlePdfSelect} \r\n                    />\r\n                    \r\n                    {pdfFile && (\r\n                        <div className=\"selected-file\" onClick={handleOpenPdf}>\r\n                            <FileText size={20} />\r\n                            <span>{pdfFile.name}</span>\r\n                            <ExternalLink size={16} className=\"preview-icon\" />\r\n                            <span className=\"preview-text\">Click to preview</span>\r\n                        </div>\r\n                    )}\r\n\r\n                    {error && <div className=\"error-message\">{error}</div>}\r\n\r\n                    <button \r\n                        onClick={handlePdfUpload} \r\n                        className={`action-button upload-button ${loading ? 'loading' : ''}`}\r\n                        disabled={loading || !pdfFile}\r\n                    >\r\n                        {loading ? (\r\n                            <>\r\n                                <div className=\"button-spinner\"></div>\r\n                                Processing...\r\n                            </>\r\n                        ) : (\r\n                            <>\r\n                                <Upload size={20} />\r\n                                Process Form\r\n                            </>\r\n                        )}\r\n                    </button>\r\n                </div>\r\n            </div>\r\n\r\n            {loading && (\r\n                <div className=\"loading-container\">\r\n                    <LoadingSpinner messages={[\"Filling your form...\", \"This may take a while....Please wait.....\"]} />\r\n                </div>\r\n            )}\r\n\r\n            {filledPdfUrl && (\r\n                <div className=\"preview-section\">\r\n                    <h3 className=\"preview-title\">Filled Form Preview</h3>\r\n                    <PDFPreview pdfUrl={filledPdfUrl} />\r\n                    <button \r\n                        onClick={handleDownloadAndRedirect}\r\n                        className=\"action-button download-button\"\r\n                    >\r\n                        <Download size={20} />\r\n                        Download Form\r\n                    </button>\r\n                </div>\r\n            )}\r\n            <div className=\"footer-container\">\r\n                <div className=\"logo-section\">\r\n                    <h2 className=\"logo-text\">Smart Form Filler</h2>\r\n                    <p className=\"logo-caption\">Intelligent Document Processing Made Easy</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}